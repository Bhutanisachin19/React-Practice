[{"/home/sachinbutani/Desktop/React/form-validation/src/index.js":"1","/home/sachinbutani/Desktop/React/form-validation/src/App.js":"2","/home/sachinbutani/Desktop/React/form-validation/src/reportWebVitals.js":"3","/home/sachinbutani/Desktop/React/form-validation/src/Components/ComponentForm.js":"4","/home/sachinbutani/Desktop/React/form-validation/src/useForm.js":"5","/home/sachinbutani/Desktop/React/form-validation/src/validateInfo.js":"6"},{"size":500,"mtime":1612332626481,"results":"7","hashOfConfig":"8"},{"size":456,"mtime":1612354198188,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612332626481,"results":"10","hashOfConfig":"8"},{"size":8089,"mtime":1612354133523,"results":"11","hashOfConfig":"8"},{"size":942,"mtime":1612354066918,"results":"12","hashOfConfig":"8"},{"size":1210,"mtime":1612351372999,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"7tm6pb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/sachinbutani/Desktop/React/form-validation/src/index.js",[],["29","30"],"/home/sachinbutani/Desktop/React/form-validation/src/App.js",[],"/home/sachinbutani/Desktop/React/form-validation/src/reportWebVitals.js",[],"/home/sachinbutani/Desktop/React/form-validation/src/Components/ComponentForm.js",["31","32"],"import React, { useRef } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container , Row , Col } from 'react-bootstrap';\nimport '../App.css';\n\n//import Button from 'react-bootstrap/Button';\n\nimport useForm from '../useForm';\nimport validate from '../validateInfo';\n\nimport Messi from './messi.png';\n\nconst ComponentForm = ({submitForm}) => {\n\n    const {handleChange , handleSubmit , values ,  errors} = useForm(submitForm , validate);\n\n\n    return (\n        <div >\n            <br></br>\n\n            {/* Container fluid */}\n            \n            <Container >\n                \n                <Row className=\"rows\">\n                    \n                    <Col  className=\"columns\">\n                        <img src={Messi}  className=\"Messi\" alt=\"Image\" />\n                    </Col>\n                    \n                    \n                    \n                    <Col  className=\"columns\">\n                        <div className=\"form-div\">\n\n                        <h2>Sign Up Here</h2>\n                            \n                            <br></br>\n                            <br></br>\n\n                                <form onSubmit={handleSubmit}>\n                                <div className=\"form-group\">\n                                <label htmlfor=\"username\">Full Name</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    placeholder=\"Enter Your Full Name\"\n                                    value={values.username}\n                                    onChange={handleChange}\n                                />\n\n                                {/* trick to display with && operator */}\n\n                                {errors.username && <p className=\"warning\">{errors.username}</p>}\n\n                                </div>\n                                <div className=\"form-group\">\n                                <label htmlfor=\"email\">E-mail Address</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Your E-mail Address\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                />\n                                {errors.email && <p className=\"warning\">{errors.email}</p>}\n\n                                </div>\n                                <div className=\"form-group\">\n                                <label htmlfor=\"phone\">Phone Number</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    id=\"phone_number\"\n                                    name=\"phone_number\"\n                                    placeholder=\"Enter Your Phone Number\"\n                                    value={values.phone_number}\n                                    onChange={handleChange}\n                                    \n                                />\n                                {errors.phone_number && <p className=\"warning\">{errors.phone_number}</p>}\n\n                                </div>\n                                <div className=\"form-group\">\n                                <label htmlfor=\"password\">Password</label>\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    id=\"password\"\n                                    name = \"password\"\n                                    placeholder=\"Enter Your Password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                />\n                                {errors.password && <p className=\"warning\">{errors.password}</p>}\n                                </div>\n\n\n\n                                <div className=\"form-group\">\n                                        <label htmlfor=\"Confirm_password\">Confirm Password</label>\n                                        <input\n                                            type=\"password\"\n                                            class=\"form-control\"\n                                            id=\"password2\"\n                                            name=\"password2\"\n                                            placeholder=\"Enter Your Password Again\"\n                                            value={values.password2}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                {errors.password2 && <p className=\"warning\">{errors.password2}</p>}\n\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                <label htmlfor=\"gender\" className=\"mr-4\">Choose Your Gender</label>\n                                <div className=\"form-check form-check-inline\">\n                                    <input\n                                    className=\"form-check-input\"\n                                    type=\"radio\"\n                                    id=\"male\"\n                                    value=\"male\"\n                                    name=\"gender\"\n                                    required\n                                    />\n                                    <label className=\"form-check-label\" for=\"male\">male</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input\n                                    className=\"form-check-input\"\n                                    type=\"radio\"\n                                    id=\"female\"\n                                    value=\"female\"\n                                    name=\"gender\"\n                                    required\n                                    />\n                                    <label className=\"form-check-label\" for=\"female\">female</label>\n                                </div>\n                                <div className=\"form-check form-check-inline\">\n                                    <input\n                                    className=\"form-check-input\"\n                                    type=\"radio\"\n                                    id=\"other\"\n                                    value=\"other\"\n                                    name=\"gender\"\n                                    required\n                                    />\n                                    <label className=\"form-check-label\" for=\"other\">other</label>\n                                </div>\n                                </div>\n                                <div className=\"form-group\">\n                                <div className=\"form-check form-check-inline\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"tnc\" required />\n                                    <label className=\"form-check-label\" for=\"tnc\"\n                                    >I agree all terms & conditions</label\n                                    >\n                                </div>\n                                </div>\n                                <button className=\"btn btn-primary\">Create New Account</button>\n                            </form>\n\n                        </div>\n                    \n                    </Col>\n\n                </Row>\n\n            </Container >\n        \n        </div>\n    )\n}\n\nexport default ComponentForm ;","/home/sachinbutani/Desktop/React/form-validation/src/useForm.js",["33"],"import {useState , useEffect } from 'react';\n\n//custom hook\n\nconst useForm = ( callback , validate) => {\n\n    const [values , setValues] = useState({\n        username : '',\n        email : '',\n        phone_number : '',\n        password : '',\n        password2 : ''\n    })\n\n    const [errors , setErrors] = useState({})\n    const [isSubmitting , setIsSubmitting] = useState(false);\n\n\n    const handleChange = e => {\n        const {name , value} = e.target;\n        setValues({\n            ...values,\n            [name]:value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true);\n    }\n\n\n    useEffect(\n        () => {\n          if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n          }\n        },\n        [errors]\n      );\n\n\n    return {handleChange , handleSubmit ,values ,errors};\n    \n};\n\n\nexport default useForm;","/home/sachinbutani/Desktop/React/form-validation/src/validateInfo.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":29,"column":25,"nodeType":"44","endLine":29,"endColumn":75},{"ruleId":"45","severity":1,"message":"46","line":40,"column":9,"nodeType":"47","endLine":40,"endColumn":17,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"54","text":"55"},[831,839],"[callback, errors, isSubmitting]"]